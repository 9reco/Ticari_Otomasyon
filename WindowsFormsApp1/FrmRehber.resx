<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xtraTabPage1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="xtraTabPage2.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>